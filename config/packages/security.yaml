security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Admin:
            algorithm: md5
            encode_as_base64: false
            iterations: 0

    providers:
        #users_in_memory: { memory: null }
        database_users:
            entity:
                class: App\Entity\Admin
                property: username
        # used to reload user from session & other features (e.g. switch_user)
        #app_user_provider:
        #id: App\Security\UserProvider
        #    entity:
        #        class: App\Entity\Admin
        #        property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true

            provider: database_users
            #form_login:
            #    check_path: login
            #    login_path: homepage
            #    csrf_token_generator: security.csrf.token_manager
            #    default_target_path: service
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: logout
                target: login
    # activate different ways to authenticate
    # https://symfony.com/doc/current/security.html#firewalls-authentication
    # https://symfony.com/doc/current/security/impersonating_user.html
    # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    #access_control:
        #- { path: ^/, roles: ROLE_ADMIN }
        #- { path: ^/service, roles: ROLE_ADMIN }
        #- { path: ^/report, roles: ROLE_ADMIN }
        #- { path: ^/invoice, roles: ROLE_ADMIN }
        #- { path: ^/profile, roles: ROLE_ADMIN }
    #role_hierarchy:
    #    ROLE_ADMIN: ROLE_USER
